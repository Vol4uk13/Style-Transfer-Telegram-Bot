from aiogram import types, Router, Bot, F
from aiogram.filters import Command, CommandStart
from aiogram.types import Message, BotCommand, FSInputFile, KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove, InputFile
import numpy as np
import torch
from PIL import Image
import gc # –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–±–æ—Ä—â–∏–∫–∞ –º—É—Å–æ—Ä–∞.
import os
from model import *  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É MSGNET
from functions import *  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏

user_private_router = Router()
device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')

status = {0: '–î–æ–±–∞–≤—å –ø–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ –∏–∑ –¥–≤—É—Ö', 1: '–î–æ–±–∞–≤—å –≤—Ç–æ—Ä–æ–µ —Ñ–æ—Ç–æ', 2: '–î–æ–±–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ —Å–æ —Å—Ç–∏–ª–µ–º', 3: '–í—ã–±–µ—Ä–∏ –∫–∞—á–µ—Å—Ç–≤–æ. –û–∂–∏–¥–∞–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.'}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –∏ –∑–∞–≥—Ä—É–∑–∏–º –≤–µ—Å–∞.
style_model = MsgNet(ngf=128).to(device)
style_model.load_state_dict(torch.load('style.model'), False)

users = {}




def transform(content_root, style_root, im_size):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è."""
    content_image = load_image_rgb(content_root, size=im_size,
                                         keep_asp=True).unsqueeze(0)
    style = load_image_rgb(style_root, size=im_size).unsqueeze(0)
    style_v = preprocess_batch(style)
    content_image = preprocess_batch(content_image)
    style_model.setTarget(style_v)
    output = style_model(content_image)
    save_image_bgr(output.data[0], 'result.jpg', False)

    # –û—á–∏—Å—Ç–∫–∞ RAM.
    del content_image
    del style
    del style_v
    del output

    torch.cuda.empty_cache()
    gc.collect()


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/start"
@user_private_router.message(CommandStart())
async def process_start_command(message: Message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start"""
    await message.answer(
        text='–ü—Ä–∏–≤–µ—Ç!\n\nü§ó –Ø –±–æ—Ç, –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—â–∏–π –æ–ø—ã—Ç –ø–æ –ø–µ—Ä–µ–Ω–æ—Å—É '
             '—Å—Ç–∏–ª—è —Å –æ–¥–Ω–æ–≥–æ —Ñ–æ—Ç–æ –Ω–∞ –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ. –û—Ç–ø—Ä–∞–≤—å '
             '–º–Ω–µ  —Ñ–æ—Ç–æ (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª, –Ω–∞–∂–º–∏ /cancel ü§î), –∑–∞—Ç–µ–º '
             '–æ—Ç–ø—Ä–∞–≤—å —Å–ª–µ–¥—É—é—â–µ–µ —Ñ–æ—Ç–æ, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—á–µ—à—å –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Å—Ç–∏–ª—å '
             '(–µ—Å–ª–∏ –æ–ø—è—Ç—å –ø–µ—Ä–µ–¥—É–º–∞–ª, –º–æ–∂–Ω–æ —Ç–∞–∫ –∂–µ –æ—Ç–º–µ–Ω–∏—Ç—å —à–∞–Ω - –Ω–∞–∂–º–∏ /cancel ü§î). '
             '–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ï—Å–ª–∏ –≤—Å–µ —à–∞–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã, —Ç–æ '
             '–æ—Å—Ç–∞–ª–æ—Å—å –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å –∏ –±–æ—Ç —Å–∫–æ—Ä–æ –ø—Ä–∏—à–ª–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç. '
    )
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–æ–ª—å–∫–æ –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ –∏ –µ–≥–æ –Ω–µ—Ç –≤ —Å–ª–æ–≤–∞—Ä–µ '
    # 'users - –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Å–ª–æ–≤–∞—Ä—å
    if message.from_user.id not in users:
        users[message.from_user.id] = {
            'flag': True,
            'content_flag': False,
            'style_flag': False,
            'final_flag': False,
            'continue_waiting': False,
            'size_img': False,
            'status': 'await for photo_1',
        }

# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/help"
@user_private_router.message(Command(commands='help'))
async def process_help_command(message: Message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /help"""
    await message.answer(
        text='–Ø –±–æ—Ç, –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—â–∏–π, '
             '–∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç–∏–ª—è '
             ' —Å –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–∞ –¥—Ä—É–≥—É—é. –í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É '
             '–∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:\n\n'
             '/start - —É–∑–Ω–∞–µ—à—å, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –∏ –∑–∞–ø—É—Å—Ç–∏—à—å –µ–≥–æ.\n'
             '/cancel - –æ—Ç–º–µ–Ω–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥—Ä—É–≥–æ–≥–æ —Ñ–æ—Ç–æ.\n'
             '/continue - –≤—ã–±–æ—Ä –∫–∞—á–µ—Å—Ç–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n'
             '/author - –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã —Å–æ–∑–¥–∞—Ç–µ–ª—è üòé\n'
             '/status - —É—Ç–æ—á–Ω–∏—Ç—å –Ω–∞ –∫–∞–∫–æ–º —à–∞–≥–µ —Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è\n'
    )


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ.
@user_private_router.message(F.photo)
async def photo_processing(message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ç–æ"""

    # –ë–æ—Ç –∂–¥–µ—Ç –ø–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ.
    try:
        if users[message.from_user.id]['flag']:
            await message.bot.download(file=message.photo[-1].file_id, destination='content.jpg')
            await message.answer(text='–ü–æ–ª—É—á–µ–Ω–∞ –ø–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ.'
                                 ' –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ —Å–æ —Å—Ç–∏–ª–µ–º –∏–ª–∏ –Ω–∞–∂–º–∏ '
                                 '–∫–æ–º–∞–Ω–¥—É /cancel –¥–ª—è –≤—ã–±–æ—Ä–∞ '
                                 '–¥—Ä—É–≥–æ–≥–æ —Ñ–æ—Ç–æ.')
            users[message.from_user.id] = {
                'flag': False,
                'content_flag': True,
                'style_flag': False,
                'final_flag': False,
                'continue_waiting': False,
                'size_img': False,
                'status': 'photo_1 downloaded'}
        # –ë–æ—Ç –æ–∂–∏–¥–∞–µ—Ç —Ñ–æ—Ç–æ —Å–æ —Å—Ç–∏–ª–µ–º.
        else:
            await message.bot.download(file=message.photo[-1].file_id, destination='style.jpg')
            await message.answer(text='–ü–æ–ª—É—á–µ–Ω–∞ –≤—Ç–æ—Ä–æ–µ —Ñ–æ—Ç–æ. –¢–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏ –∫–æ–º–∞–Ω–¥—É /continue '
                                  ' –∏–ª–∏ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã –∏ –≤—ã–±–æ—Ä–∞ '
                                  ' —Ñ–æ—Ç–æ —Å –¥—Ä—É–≥–∏–º —Å—Ç–∏–ª–µ–º ü§†. ')
            users[message.from_user.id] = {
                'flag': True,
                'content_flag': True,
                'style_flag': True,
                'final_flag': False,
                'continue_waiting': False,
                'size_img': False,
                'status': 'photo_2 downloaded'
                }
    except KeyError as e:
        await message.answer(text='–î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –Ω–∞–∂–º–∏ –∫–æ–º–∞–Ω–¥—É –∏–∑ –º–µ–Ω—é /start')




# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/cancel" –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥—Ä—É–≥–æ–≥–æ —Ñ–æ—Ç–æ –∏–ª–∏ —Å—Ç–∏–ª—è.
@user_private_router.message(Command(commands='cancel'))
async def cancel_process(message: Message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /cancel"""
    try:
        if users[message.from_user.id]['content_flag'] == False and users[message.from_user.id]['style_flag'] == False:
            users[message.from_user.id] = {
                'flag': True,
                'content_flag': False,
                'style_flag': False,
                'final_flag': False,
                'continue_waiting': False,
                'size_img': False,
                'status': 'await for photo_1'
                }
            await message.answer(text="–ü–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ.")
        else:
            users[message.from_user.id] = {
                'flag': False,
                'content_flag': True,
                'style_flag': False,
                'final_flag': False,
                'continue_waiting': False,
                'size_img': False,
                'status': 'await for photo_2'
                }
            await message.answer(text="–û—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É "
                                 " –≤—Ç–æ—Ä–æ–µ —Ñ–æ—Ç–æ —Å–æ —Å—Ç–∏–ª–µ–º "
                                 " –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ –Ω–∞ –ø–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ. ")
    except KeyError as e:
        await message.answer(text='–î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –Ω–∞–∂–º–∏ –∫–æ–º–∞–Ω–¥—É –∏–∑ –º–µ–Ω—é /start')


@user_private_router.message(Command(commands='status'))
async def get_status(message: Message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /status"""
    try:
        if users[message.from_user.id]['content_flag'] == False:
            await message.answer(text = status[0])
        elif users[message.from_user.id]['style_flag'] == False:
            await message.answer(text = status[1])
        elif users[message.from_user.id]['continue_waiting'] == False:
            await message.answer(text = status[2])
        else:
            await message.answer(text = status[3])
    except KeyError as e:
        await message.answer(text='–î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –Ω–∞–∂–º–∏ –∫–æ–º–∞–Ω–¥—É –∏–∑ –º–µ–Ω—é /start')




@user_private_router.message(F.text, Command("author"))
async def creator(message: Message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /author"""
    link = 'https://github.com/Vol4uk13/Style-Transfer-Telegram-Bot'
    await message.answer(text="–ë–æ—Ç —Å–¥–µ–ª–∞–Ω Vol4uk13 ü¶∏."
                              "\n–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ–¥ –±–æ—Ç–∞ " + link)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/continue" –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç–∏–ª—è.
@user_private_router.message(F.text, Command("continue"))
async def contin(message: types.Message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /continue"""
    try:
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–∞–∫—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±–µ–∏—Ö —Ñ–æ—Ç–æ.
        if users[message.from_user.id]['content_flag'] == False or users[message.from_user.id]['style_flag'] == False:
            await message.answer(text="–î–≤–µ —Ñ–æ—Ç–æ –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
        else:
        # –î–æ–±–∞–≤–∏–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞.
            button1 = KeyboardButton(text="Low")
            button2 = KeyboardButton(text="Medium")
            button3 = KeyboardButton(text="High")
            res = ReplyKeyboardMarkup(keyboard=[[button1, button2, button3]],resize_keyboard=True,
                                      one_time_keyboard=True)

            await message.answer(text="–°—É–ø–µ—Ä, —Ç–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ"
                                 " –¥–ª—è –±—É–¥—É—â–µ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏. –ß–µ–º –≤—ã—à–µ "
                                 "–∫–∞—á–µ—Å—Ç–≤–æ, —Ç–µ–º –º–µ–¥–ª–µ–Ω–Ω–µ–π –ø—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏."
                                 " –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø—Ä–∏—à–ª–∏ –º–Ω–µ —Å–Ω–æ–≤–∞ –¥–≤–µ —Ñ–æ—Ç–æ,"
                                 " –≥–¥–µ –ø–æ—Å–ª–µ–¥–Ω—è—è —Ñ–æ—Ç–æ —Å–æ —Å—Ç–∏–ª–µ–º.", reply_markup=res)

            users[message.from_user.id] = {
                'flag': False,
                'content_flag': True,
                'style_flag': True,
                'final_flag': False,
                'continue_waiting': True,
                'size_img': False,
                'status': 'await for photo_1'}
    except KeyError as e:
        await message.answer(text='–î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –Ω–∞–∂–º–∏ –∫–æ–º–∞–Ω–¥—É –∏–∑ –º–µ–Ω—é /start')


@user_private_router.message(F.text == 'Low')
async def low_func(message: Message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–∞ Low"""
    users[message.from_user.id]['size_img'] = 256

    await message.answer(text='–ü—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—É—â–µ–Ω.–ù—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å... ',
                         reply_markup=types.ReplyKeyboardRemove())
    transform(os.path.abspath("content.jpg"), os.path.abspath("style.jpg"), users[message.from_user.id]['size_img'])
    photo = FSInputFile(os.path.abspath("./result.jpg"))
    await  message.answer_photo(photo,caption = '–ì–æ—Ç–æ–≤–æ!')
    users[message.from_user.id] = {
            'flag': True,
            'content_flag': False,
            'style_flag': False,
            'final_flag': False,
            'continue_waiting': False,
            'size_img': False,
            'status': 'await for photo_1'}

@user_private_router.message(F.text == 'Medium')
async def low_func(message: Message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–∞ Medium"""

    users[message.from_user.id]['size_img'] = 300

    await message.answer(text='–ü—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—É—â–µ–Ω.–ù—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å... ',
                         reply_markup=types.ReplyKeyboardRemove())
    transform(os.path.abspath("content.jpg"), os.path.abspath("style.jpg"), users[message.from_user.id]['size_img'])
    photo = FSInputFile(os.path.abspath("./result.jpg"))
    await  message.answer_photo(photo,caption = '–ì–æ—Ç–æ–≤–æ!')

    users[message.from_user.id] = {
            'flag': True,
            'content_flag': False,
            'style_flag': False,
            'final_flag': False,
            'continue_waiting': False,
            'size_img': False,
            'status': 'await for photo_1'}


@user_private_router.message(F.text == 'High')
async def low_func(message: Message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–∞ High"""

    users[message.from_user.id]['size_img'] = 350

    await message.answer(text='–ü—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—É—â–µ–Ω.–ù—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å... ',
                         reply_markup=types.ReplyKeyboardRemove())
    transform(os.path.abspath("content.jpg"), os.path.abspath("style.jpg"), users[message.from_user.id]['size_img'])
    photo = FSInputFile(os.path.abspath("./result.jpg"))
    await  message.answer_photo(photo,caption = '–ì–æ—Ç–æ–≤–æ!')

    users[message.from_user.id] = {
            'flag': True,
            'content_flag': False,
            'style_flag': False,
            'final_flag': False,
            'continue_waiting': False,
            'size_img': False,
            'status': 'await for photo_1'}
# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
@user_private_router.message(F.text == 'clear')
async def clear_story(message: Message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è"""

    users[message.from_user.id] = {
            'flag': True,
            'content_flag': False,
            'style_flag': False,
            'final_flag': False,
            'continue_waiting': False,
            'size_img': False,
            'status': 'await for photo_1',
        }

    await message.answer(text='–ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞. –ù–∞–∂–º–∏ /start –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞. –° —Ç–æ–±–æ–π –ø—Ä–∏—è—Ç–Ω–æ –∏–º–µ—Ç—å –¥–µ–ª–æ.üòö')


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –ª—é–±—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è,
# –∫—Ä–æ–º–µ –∫–æ–º–∞–Ω–¥ "/start" –∏ "/help"
@user_private_router.message()
async def send_echo(message: Message):
    try:
        await message.answer(
            text='–Ø –¥–∞–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å —Å–µ–±–µ –Ω–µ –º–æ–≥—É, '
            '—á—Ç–æ —Ç—ã –∏–º–µ–µ—à—å –≤ –≤–∏–¥—É\n\n'
            '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ - '
            '–æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /help'
            )
    except KeyError as e:
        await message.answer(text='–î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –Ω–∞–∂–º–∏ –∫–æ–º–∞–Ω–¥—É –∏–∑ –º–µ–Ω—é /start')